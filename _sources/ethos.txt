.. _ethos:

.. image:: ../artwork/toyplot.png
  :width: 200px
  :align: right

The Toyplot Ethos
=================

What began as a quick workaround to reduce the size of animations in IPython
notebooks has become Toyplot, "the kid-sized plotting toolkit for Python with
grownup-sized goals".  In a nutshell, we think that scientists and engineers
should expect more from their plots: more interaction, more reproducibility,
greater clarity, and better aesthetics.

We especially feel that, in an age of ubiquitous electronic media and the web,
it makes little sense to publish using media (such as PDF) designed to mimic
the limitations of static paper.  Toyplot embraces the tools of the web - SVG,
HTML, and Javascript - as its primary medium, so we can make useful new
interactions part of the everyday experiences of data graphic users.  Because
we're passionate about publishing and sharing results, Toyplot graphics are
completely self-contained and embeddable, without the need for a server.  All
of the Toyplot graphics you see in these pages are live and interactive,
despite the fact that they were created offline in an IPython notebook and
passed through several publishing steps on the way to becoming our
documentation.

By interactivity we mean the obvious stuff of course, such as zooming and
panning.  But beyond that, Toyplot has the beginnings of interactive data
cursors that display quantities of interest and descriptive statistics while
hovering over the data.  When it comes to reproducibility, access to data can
be key.  Since the data is already implicitly embedded in a Toyplot graphic, we
thought: why not make it easy to export, so the viewer can work with it
themselves?  That's why Toyplot has a context menu for exporting the raw data from a
figure in CSV format.

And while we're at it, shouldn't we have a plotting library that fully embraces
the best principles for clarity and aesthetics that have been established over
the past two decades?  Toyplot has beautiful color palettes and sensible
default styling that minimizes chartjunk and maximizes data ink out of the box,
not as addons.

